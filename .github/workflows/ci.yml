name: Continuous Integration

on:
  push:
    branches: [main, develop]
  pull_request:
    branches: [main, develop]

jobs:
  test:
    name: Test Suite
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20.x'
          cache: 'npm'

      - name: Install dependencies
        run: npm ci

      - name: TypeScript type checking
        run: npm run type-check

      - name: ESLint code quality check
        run: npm run lint

      - name: Unit tests with coverage
        run: npm run test:coverage

      - name: Build production bundle
        run: npm run build

      - name: Upload coverage reports
        uses: codecov/codecov-action@v5
        with:
          file: ./coverage/lcov.info
          fail_ci_if_error: false

      - name: Generate coverage badge
        if: github.ref == 'refs/heads/main'
        run: |
          # Extract coverage percentage from Jest output
          COVERAGE=$(npm run test:coverage 2>&1 | grep "All files" | awk '{print $2}' | sed 's/%//')

          # Determine badge color based on coverage
          if (( $(echo "$COVERAGE >= 80" | bc -l) )); then
            COLOR="brightgreen"
          elif (( $(echo "$COVERAGE >= 70" | bc -l) )); then
            COLOR="green"
          elif (( $(echo "$COVERAGE >= 60" | bc -l) )); then
            COLOR="yellow"
          else
            COLOR="red"
          fi

          # Create coverage badge JSON
          mkdir -p badges
          cat > badges/coverage.json << EOF
          {
            "schemaVersion": 1,
            "label": "coverage",
            "message": "${COVERAGE}%",
            "color": "${COLOR}"
          }
          EOF

          echo "Generated coverage badge: ${COVERAGE}% (${COLOR})"

      - name: Commit coverage badge
        if: github.ref == 'refs/heads/main'
        run: |
          git config --local user.email "action@github.com"
          git config --local user.name "GitHub Action"
          git add badges/coverage.json

          # Only commit if there are changes
          if ! git diff --staged --quiet; then
            git commit -m "Update coverage badge [skip ci]"
            git push origin main
          else
            echo "No changes to coverage badge"
          fi

  e2e-tests:
    name: End-to-End Tests
    runs-on: ubuntu-latest
    timeout-minutes: 45
    if: github.ref == 'refs/heads/main' || github.event_name == 'pull_request'

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20.x'
          cache: 'npm'

      - name: Install dependencies
        run: npm ci

      - name: Install Playwright browsers
        run: npx playwright install --with-deps

      - name: Build application
        run: npm run build

      - name: Run E2E tests
        run: npm run test:e2e
        timeout-minutes: 40

      - name: Upload E2E test artifacts
        if: failure()
        uses: actions/upload-artifact@v4
        with:
          name: e2e-test-results
          path: test-results/

  security:
    name: Security Scan
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20.x'
          cache: 'npm'

      - name: Install dependencies
        run: npm ci

      - name: Run security audit
        run: npm run security:check

      - name: License compliance check
        run: npm run licenses:check

  quality-gates:
    name: Quality Gates
    runs-on: ubuntu-latest
    needs: [test]
    if: always()

    steps:
      - name: Check test results
        run: |
          if [[ "${{ needs.test.result }}" != "success" ]]; then
            echo "❌ Tests failed - blocking deployment"
            exit 1
          else
            echo "✅ All tests passed - ready for deployment"
          fi
